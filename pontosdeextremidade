{"swagger": "2.0", "info": {"title": "pacientes-diabetivos", "description": "API specification for the Azure Machine Learning service pacientes-diabetivos", "version": "1.0"}, "schemes": ["https"], "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"type": "apiKey", "name": "Authorization", "in": "header", "description": "For example: Bearer abc123"}}, "paths": {"/": {"get": {"operationId": "ServiceHealthCheck", "description": "Simple health check endpoint to ensure the service is up at any given point.", "responses": {"200": {"description": "If service is up and running, this response will be returned with the content 'Healthy'", "schema": {"type": "string"}, "examples": {"application/json": "Healthy"}}, "default": {"description": "The service failed to execute due to an error.", "schema": {"$ref": "#/definitions/ErrorResponse"}}}}}, "/score": {"post": {"operationId": "RunMLService", "description": "Run web service's model and get the prediction output", "security": [{"Bearer": []}], "parameters": [{"name": "serviceInputPayload", "in": "body", "description": "The input payload for executing the real-time machine learning service.", "schema": {"$ref": "#/definitions/ServiceInput"}}], "responses": {"200": {"description": "The service processed the input correctly and provided a result prediction, if applicable.", "schema": {"$ref": "#/definitions/ServiceOutput"}}, "default": {"description": "The service failed to execute due to an error.", "schema": {"$ref": "#/definitions/ErrorResponse"}}}}}, "/swagger.json": {"get": {"operationId": "GetSwaggerSpec", "description": "Get the Swagger specification.", "parameters": [{"name": "version", "in": "query", "required": false, "type": "integer", "enum": [2, 3]}], "responses": {"200": {"description": "The Swagger specification.", "schema": {"type": "string"}}, "default": {"description": "The service failed to execute due to an error.", "schema": {"$ref": "#/definitions/ErrorResponse"}}}}}}, "definitions": {"ServiceInput": {"type": "object", "properties": {"Inputs": {"type": "object", "required": ["data"], "properties": {"data": {"type": "array", "items": {"type": "object", "required": ["PatientID", "Pregnancies", "PlasmaGlucose", "DiastolicBloodPressure", "TricepsThickness", "SerumInsulin", "BMI", "DiabetesPedigree", "Diabetic"], "properties": {"PatientID": {"type": "integer", "format": "int64"}, "Pregnancies": {"type": "integer", "format": "int64"}, "PlasmaGlucose": {"type": "integer", "format": "int64"}, "DiastolicBloodPressure": {"type": "integer", "format": "int64"}, "TricepsThickness": {"type": "integer", "format": "int64"}, "SerumInsulin": {"type": "integer", "format": "int64"}, "BMI": {"type": "number", "format": "double"}, "DiabetesPedigree": {"type": "number", "format": "double"}, "Diabetic": {"type": "integer", "format": "int64"}}}, "format": "pandas.DataFrame:records"}}}, "GlobalParameters": {"type": "number", "format": "double"}}, "example": {"Inputs": {"data": [{"PatientID": 0, "Pregnancies": 0, "PlasmaGlucose": 0, "DiastolicBloodPressure": 0, "TricepsThickness": 0, "SerumInsulin": 0, "BMI": 0.0, "DiabetesPedigree": 0.0, "Diabetic": 0}]}, "GlobalParameters": 1.0}}, "ServiceOutput": {"type": "object", "required": ["Results"], "properties": {"Results": {"type": "array", "items": {"type": "integer", "format": "int64"}, "format": "numpy.ndarray"}}, "example": {"Results": [0]}}, "ErrorResponse": {"type": "object", "properties": {"message": {"type": "string"}}}}}
